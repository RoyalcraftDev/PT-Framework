name: Build PT-Framework for Desktop

on:
  workflow_dispatch:
  workflow_call:
  push:
    branches:
      - main


permissions:
  contents: write
  discussions: write

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4.2.2

    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v4.2.0
      with:
        dotnet-version: 9.0.x
        dotnet-quality: 'preview'

    - name: Publish build artifacts
      run: |
        dotnet publish PT-Framework.csproj --configuration Release --framework net9.0 --output artifacts/publish/${{ matrix.os }}/

    - name: Archive artifacts (ubuntu and macos)
      if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'
      run: |
        mkdir -p ./releases
        zip -r ./releases/PT-Framework-${{ matrix.os }}.zip ./artifacts/publish/${{ matrix.os }}/
      
    - name: Archive artifacts (windows)
      if: matrix.os == 'windows-latest'
      run: |
        mkdir -p ./releases
        Compress-Archive -Path ./artifacts/publish/${{ matrix.os }}/* -DestinationPath ./releases/PT-Framework-${{ matrix.os }}.zip
    
    - name: Upload artifacts to GitHub Actions
      uses: actions/upload-artifact@v4.6.0
      with:
          name: ${{ matrix.os }}-artifacts
          path: artifacts

    - name: Upload artifacts to GitHub Releases
      uses: softprops/action-gh-release@v2.2.1
      with:
        files: ./releases/PT-Framework-${{ matrix.os }}.zip
        tag_name: testing-phase
        name: "Testing Phase Release for PT-Framework"
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  nuget-upload:
    runs-on: windows-latest
    needs: build
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4.2.2

    - name: Download artifacts
      uses: actions/download-artifact@v4.1.8
      with:
        path: artifacts
    
    - name: Setup NuGet CLI
      uses: nuget/setup-nuget@v2
      with:
        nuget-version: '5.x'
        
    - name: Generate package file
      run: |
        echo '<?xml version="1.0"?>
          <package >
            <metadata>
              <id>ProjectTerra.Framework</id>
              <version>0.0.${{ github.run_number }}</version>
              <authors>Tsukimoto</authors>
              <requireLicenseAcceptance>false</requireLicenseAcceptance>
              <description>Cross-platform framework designed to help the development of ProjectTerra and other games</description>
              <license type="file">LiCENSE</license>
              <repository type="git" url="https://github.com/TsukimotoX/PT-Framework" />
              <readme>README.md</readme>
            </metadata>
            <files>
              <file src="README.md" target="." />
              <file src="LICENSE" target="." />
              <file src="artifacts/windows-latest-artifacts/**/*" target="lib/net9.0/" />
              <file src="artifacts/ubuntu-latest-artifacts/**/*" target="lib/net9.0/" />
              <file src="artifacts/macos-latest-artifacts/**/*" target="lib/net9.0/" />
            </files>
          </package>' > ProjectTerra.Framework.nuspec
  
    - name: Pack NuGet package
      run: nuget pack ProjectTerra.Framework.nuspec -OutputDirectory artifacts/nuget/
  
    - name: Publish to NuGet
      run: dotnet nuget push artifacts/nuget/ProjectTerra.Framework.0.0.${{ github.run_number }}.nupkg `
        --api-key ${{ secrets.NUGET_API_KEY }} `
        --source https://api.nuget.org/v3/index.json `
        --skip-duplicate
